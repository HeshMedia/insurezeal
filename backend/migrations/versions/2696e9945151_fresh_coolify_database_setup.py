"""fresh_coolify_database_setup

Revision ID: 2696e9945151
Revises: eaf258724fc2
Create Date: 2025-09-15 18:59:51.856654

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2696e9945151'
down_revision: Union[str, None] = 'eaf258724fc2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brokers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('broker_code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('rm', sa.String(length=100), nullable=False),
    sa.Column('gst', sa.String(length=15), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brokers_broker_code'), 'brokers', ['broker_code'], unique=True)
    op.create_index(op.f('ix_brokers_id'), 'brokers', ['id'], unique=False)
    op.create_table('insurers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('insurer_code', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insurers_id'), 'insurers', ['id'], unique=False)
    op.create_index(op.f('ix_insurers_insurer_code'), 'insurers', ['insurer_code'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('is_sso_user', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.'),
    sa.Column('is_anonymous', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('instance_id', sa.UUID(), nullable=True),
    sa.Column('aud', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.Text(), server_default=sa.text('NULL::character varying'), nullable=True),
    sa.Column('encrypted_password', sa.String(length=255), nullable=True),
    sa.Column('email_confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmation_token', sa.String(length=255), nullable=True),
    sa.Column('confirmation_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('recovery_token', sa.String(length=255), nullable=True),
    sa.Column('recovery_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_change_token_new', sa.String(length=255), nullable=True),
    sa.Column('email_change', sa.String(length=255), nullable=True),
    sa.Column('email_change_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_change_token_current', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('email_change_confirm_status', sa.SmallInteger(), server_default=sa.text('0'), nullable=True),
    sa.Column('phone_confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('phone_change', sa.Text(), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('phone_change_token', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('phone_change_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_sign_in_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('invited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('raw_app_meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('raw_user_meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_super_admin', sa.Boolean(), nullable=True),
    sa.Column('banned_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reauthentication_token', sa.String(length=255), server_default=sa.text("''::character varying"), nullable=True),
    sa.Column('reauthentication_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), sa.Computed('LEAST(email_confirmed_at, phone_confirmed_at)', persisted=True), nullable=True),
    sa.CheckConstraint('email_change_confirm_status >= 0 AND email_change_confirm_status <= 2', name='users_email_change_confirm_status_check'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('phone', name='users_phone_key')
    )
    op.create_index('confirmation_token_idx', 'users', ['confirmation_token'], unique=True)
    op.create_index('email_change_token_current_idx', 'users', ['email_change_token_current'], unique=True)
    op.create_index('email_change_token_new_idx', 'users', ['email_change_token_new'], unique=True)
    op.create_index('reauthentication_token_idx', 'users', ['reauthentication_token'], unique=True)
    op.create_index('recovery_token_idx', 'users', ['recovery_token'], unique=True)
    op.create_index('users_email_partial_key', 'users', ['email'], unique=True)
    op.create_index('users_instance_id_email_idx', 'users', ['instance_id'], unique=False)
    op.create_index('users_instance_id_idx', 'users', ['instance_id'], unique=False)
    op.create_index('users_is_anonymous_idx', 'users', ['is_anonymous'], unique=False)
    op.create_table('admin_child_ids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('branch_code', sa.String(length=20), nullable=False),
    sa.Column('region', sa.String(length=50), nullable=False),
    sa.Column('manager_name', sa.String(length=100), nullable=False),
    sa.Column('manager_email', sa.String(length=255), nullable=False),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('code_type', sa.String(length=20), nullable=False),
    sa.Column('insurer_id', sa.Integer(), nullable=False),
    sa.Column('broker_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_suspended', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['broker_id'], ['brokers.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['insurer_id'], ['insurers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_child_ids_child_id'), 'admin_child_ids', ['child_id'], unique=True)
    op.create_index(op.f('ix_admin_child_ids_id'), 'admin_child_ids', ['id'], unique=False)
    op.create_table('child_id_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('code_type', sa.String(length=20), nullable=False),
    sa.Column('insurer_code', sa.String(length=10), nullable=False),
    sa.Column('broker_code', sa.String(length=10), nullable=True),
    sa.Column('preferred_rm_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('child_id', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('branch_code', sa.String(length=20), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('manager_name', sa.String(length=100), nullable=True),
    sa.Column('manager_email', sa.String(length=255), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['broker_code'], ['brokers.broker_code'], ),
    sa.ForeignKeyConstraint(['insurer_code'], ['insurers.insurer_code'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_child_id_requests_child_id'), 'child_id_requests', ['child_id'], unique=True)
    op.create_index(op.f('ix_child_id_requests_user_id'), 'child_id_requests', ['user_id'], unique=False)
    op.create_table('cutpay_agent_configs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agent_code', sa.String(length=50), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('payment_mode', sa.String(length=100), nullable=False),
    sa.Column('payment_mode_detail', sa.Text(), nullable=True),
    sa.Column('po_paid_to_agent', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agent_code', 'date', name='unique_cutpay_agent_config_per_date')
    )
    op.create_index('idx_cutpay_agent_config_agent_code', 'cutpay_agent_configs', ['agent_code'], unique=False)
    op.create_index('idx_cutpay_agent_config_date', 'cutpay_agent_configs', ['date'], unique=False)
    op.create_index(op.f('ix_cutpay_agent_configs_agent_code'), 'cutpay_agent_configs', ['agent_code'], unique=False)
    op.create_table('reconciliation_reports',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('insurer_name', sa.String(length=100), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('total_records_processed', sa.Integer(), nullable=False),
    sa.Column('total_records_updated', sa.Integer(), nullable=False),
    sa.Column('total_records_added', sa.Integer(), nullable=False),
    sa.Column('total_records_skipped', sa.Integer(), nullable=False),
    sa.Column('total_errors', sa.Integer(), nullable=False),
    sa.Column('processing_time_seconds', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('data_variance_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('coverage_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('field_changes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('change_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('file_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('processed_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reconciliation_reports_created_at', 'reconciliation_reports', ['created_at'], unique=False)
    op.create_index('idx_reconciliation_reports_insurer', 'reconciliation_reports', ['insurer_name'], unique=False)
    op.create_index('idx_reconciliation_reports_processed_by', 'reconciliation_reports', ['processed_by'], unique=False)
    op.create_index('idx_reconciliation_reports_status', 'reconciliation_reports', ['status'], unique=False)
    op.create_index(op.f('ix_reconciliation_reports_insurer_name'), 'reconciliation_reports', ['insurer_name'], unique=False)
    op.create_table('user_documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('document_name', sa.String(length=200), nullable=False),
    sa.Column('document_url', sa.Text(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('upload_date', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_documents_user_id'), 'user_documents', ['user_id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('middle_name', sa.String(length=50), nullable=True),
    sa.Column('father_name', sa.String(length=100), nullable=True),
    sa.Column('mother_name', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('mobile_number', sa.String(length=15), nullable=True),
    sa.Column('alternate_mobile', sa.String(length=15), nullable=True),
    sa.Column('alternate_email', sa.String(length=255), nullable=True),
    sa.Column('permanent_address_line1', sa.String(length=200), nullable=True),
    sa.Column('permanent_address_line2', sa.String(length=200), nullable=True),
    sa.Column('permanent_city', sa.String(length=50), nullable=True),
    sa.Column('permanent_state', sa.String(length=50), nullable=True),
    sa.Column('permanent_pincode', sa.String(length=6), nullable=True),
    sa.Column('communication_same_as_permanent', sa.Boolean(), nullable=True),
    sa.Column('communication_address_line1', sa.String(length=200), nullable=True),
    sa.Column('communication_address_line2', sa.String(length=200), nullable=True),
    sa.Column('communication_city', sa.String(length=50), nullable=True),
    sa.Column('communication_state', sa.String(length=50), nullable=True),
    sa.Column('communication_pincode', sa.String(length=6), nullable=True),
    sa.Column('education_level', sa.String(length=50), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('previous_insurance_experience', sa.Boolean(), nullable=True),
    sa.Column('years_of_experience', sa.SmallInteger(), nullable=True),
    sa.Column('previous_company_name', sa.String(length=100), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('account_number', sa.String(length=18), nullable=True),
    sa.Column('ifsc_code', sa.String(length=11), nullable=True),
    sa.Column('branch_name', sa.String(length=100), nullable=True),
    sa.Column('nominee_name', sa.String(length=100), nullable=True),
    sa.Column('nominee_relationship', sa.String(length=50), nullable=True),
    sa.Column('nominee_date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferred_language', sa.String(length=20), nullable=True),
    sa.Column('territory_preference', sa.String(length=100), nullable=True),
    sa.Column('agent_code', sa.String(length=8), nullable=True),
    sa.Column('user_role', sa.String(length=20), nullable=False),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_profiles_agent_code'), 'user_profiles', ['agent_code'], unique=True)
    op.create_index(op.f('ix_user_profiles_username'), 'user_profiles', ['username'], unique=True)
    op.create_table('cut_pay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('policy_number', sa.String(length=100), nullable=True),
    sa.Column('child_id_request_id', sa.UUID(), nullable=True),
    sa.Column('agent_code', sa.String(length=50), nullable=True),
    sa.Column('insurer_id', sa.Integer(), nullable=True),
    sa.Column('broker_id', sa.Integer(), nullable=True),
    sa.Column('admin_child_id', sa.String(length=50), nullable=True),
    sa.Column('additional_documents', sa.Text(), nullable=True),
    sa.Column('policy_pdf_url', sa.Text(), nullable=True),
    sa.Column('booking_date', sa.Date(), nullable=True),
    sa.Column('policy_start_date', sa.Date(), nullable=True),
    sa.Column('policy_end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['admin_child_id'], ['admin_child_ids.child_id'], ),
    sa.ForeignKeyConstraint(['broker_id'], ['brokers.id'], ),
    sa.ForeignKeyConstraint(['child_id_request_id'], ['child_id_requests.id'], ),
    sa.ForeignKeyConstraint(['insurer_id'], ['insurers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('policy_number', sa.String(length=100), nullable=False),
    sa.Column('child_id', sa.String(length=50), nullable=True),
    sa.Column('agent_code', sa.String(length=50), nullable=True),
    sa.Column('additional_documents', sa.Text(), nullable=True),
    sa.Column('policy_pdf_url', sa.Text(), nullable=True),
    sa.Column('booking_date', sa.Date(), nullable=True),
    sa.Column('policy_start_date', sa.Date(), nullable=True),
    sa.Column('policy_end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_id_requests.child_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_policies_id'), 'policies', ['id'], unique=False)
    op.create_index(op.f('ix_policies_policy_number'), 'policies', ['policy_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_policies_policy_number'), table_name='policies')
    op.drop_index(op.f('ix_policies_id'), table_name='policies')
    op.drop_table('policies')
    op.drop_table('cut_pay')
    op.drop_index(op.f('ix_user_profiles_username'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_agent_code'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_user_documents_user_id'), table_name='user_documents')
    op.drop_table('user_documents')
    op.drop_index(op.f('ix_reconciliation_reports_insurer_name'), table_name='reconciliation_reports')
    op.drop_index('idx_reconciliation_reports_status', table_name='reconciliation_reports')
    op.drop_index('idx_reconciliation_reports_processed_by', table_name='reconciliation_reports')
    op.drop_index('idx_reconciliation_reports_insurer', table_name='reconciliation_reports')
    op.drop_index('idx_reconciliation_reports_created_at', table_name='reconciliation_reports')
    op.drop_table('reconciliation_reports')
    op.drop_index(op.f('ix_cutpay_agent_configs_agent_code'), table_name='cutpay_agent_configs')
    op.drop_index('idx_cutpay_agent_config_date', table_name='cutpay_agent_configs')
    op.drop_index('idx_cutpay_agent_config_agent_code', table_name='cutpay_agent_configs')
    op.drop_table('cutpay_agent_configs')
    op.drop_index(op.f('ix_child_id_requests_user_id'), table_name='child_id_requests')
    op.drop_index(op.f('ix_child_id_requests_child_id'), table_name='child_id_requests')
    op.drop_table('child_id_requests')
    op.drop_index(op.f('ix_admin_child_ids_id'), table_name='admin_child_ids')
    op.drop_index(op.f('ix_admin_child_ids_child_id'), table_name='admin_child_ids')
    op.drop_table('admin_child_ids')
    op.drop_index('users_is_anonymous_idx', table_name='users')
    op.drop_index('users_instance_id_idx', table_name='users')
    op.drop_index('users_instance_id_email_idx', table_name='users')
    op.drop_index('users_email_partial_key', table_name='users')
    op.drop_index('recovery_token_idx', table_name='users')
    op.drop_index('reauthentication_token_idx', table_name='users')
    op.drop_index('email_change_token_new_idx', table_name='users')
    op.drop_index('email_change_token_current_idx', table_name='users')
    op.drop_index('confirmation_token_idx', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_insurers_insurer_code'), table_name='insurers')
    op.drop_index(op.f('ix_insurers_id'), table_name='insurers')
    op.drop_table('insurers')
    op.drop_index(op.f('ix_brokers_id'), table_name='brokers')
    op.drop_index(op.f('ix_brokers_broker_code'), table_name='brokers')
    op.drop_table('brokers')
    # ### end Alembic commands ###
